name: "Testing_Coverage"

on:
  # As currently structured, this adds too many jobs (checks?), so don't run it
  # on pull requests yet.
  push:
    branches:
      - dev_*
      - fix_*
      - test_*
  workflow_dispatch:

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  coverage:
    name: "Python 3.9 on Ubuntu"
    #container: python:3.9
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Set up Python"
        id: setup
        uses: "actions/setup-python@v3"
        with:
          python-version: 3.9
          cache: pip
          #cache-dependency-path: "residual_term_builder/.cache/pip"

      - name: "Install dependencies"
        id: install
        run: |
          python -V               # Print out python version for debugging
          python -m pip install virtualenv >> setup_output.txt
          virtualenv venv  >> setup_output.txt
          . venv/bin/activate
          python -m pip install -r requirements.txt >> setup_output.txt
          python -m pip install -r test_requirements.txt >> setup_output.txt

      - name: "Run 'deep' pytest suite"
        id: run_test
        run: |
          . venv/bin/activate
          python -m coverage run -m pytest -k 'deep' --tb=no >> printing_output.txt # only run deep tests (1 ~ 3 seconds long)

      - name: "Generate coverage reports"
        id: make_reports
        if: success() || failure()
        run: |
          . venv/bin/activate
          python -m coverage html
          python -m coverage xml
          python -m coverage report

      - name: "Store testing output as artifacts"
        id: store_output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: output_files
          path: |
            setup_output.txt
            printing_output.txt
            default_logging_file.txt

      - name: "Upload coverage to Codecov"
        id: upload_reports
        if: steps.make_reports.outcome == 'success'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./
          fail_ci_if_error: true # optional (default = false)
          files: coverage*.xml
          #flags: unittests # optional
          name: codecov-umbrella # optional
          verbose: true # optional (default = false)

      - name: "Store html coverage report as artifacts"
        id: store_htmlcov
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: htmlcov
          path: htmlcov/*
