# .coveragerc to control coverage.py

[run]
include =
    termfactory/code_dt_equations.py
    termfactory/code_full_cc.py
    termfactory/code_residual_equations.py
    termfactory/code_w_equations.py
    termfactory/helper_funcs.py
    termfactory/latex_eT_zhz.py
    termfactory/latex_full_cc.py
    termfactory/latex_w_equations.py
    termfactory/latex_zhz.py

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
        # Project specific debugging code to ignore
    def _debug
    log.debug
    raise e
    pass
    continue
    if not letters:
    if debug_flag:
    def old_print_wrapper
    old_print_wrapper
    new_t_list = t_list

    # currently unused functions
        # full cc latex
    def _build_latex_h_string
    def _build_latex_t_string
    def _build_h_string
        # latex zhz
    def _generate_t_symmetric_left_hand_side
    def _write_t_symmetric_latex_from_lists
    def _generate_t_symmetric_latex_equations
    def _generate_t_symmetric_left_hand_side
    def _make_z_symmetric_latex
        # code w
    def _next_list
    def _generate_t_lists
    def _generate_t_terms_dictionary
    def _permutation_function
    def _write_permutations

    # color based exceptions
    if not color:




ignore_errors = True

[html]
# directory =